<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.glowroot.instrumentation</groupId>
  <artifactId>instrumentation-parent</artifactId>
  <version>0.14.9-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Instrumentation Parent Project</name>
  <description>Instrumentation Parent Project</description>
  <url>https://github.com/glowroot/instrumentation</url>
  <inceptionYear>2019</inceptionYear>
  <organization>
    <name>Glowroot contributors</name>
    <url>https://github.com/glowroot</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Trask Stalnaker</name>
      <email>trask.stalnaker@gmail.com</email>
    </developer>
  </developers>

  <modules>
    <module>instrumentation-api</module>
    <module>instrumentation-engine</module>
    <module>instrumentation-test-harness</module>
    <module>instrumentation/apache-http-async-client</module>
    <module>instrumentation/apache-http-client</module>
    <module>instrumentation/async-http-client</module>
    <module>instrumentation/axis-client</module>
    <module>instrumentation/camel</module>
    <module>instrumentation/cassandra</module>
    <module>instrumentation/ejb</module>
    <module>instrumentation/elasticsearch</module>
    <module>instrumentation/executor</module>
    <module>instrumentation/grails</module>
    <module>instrumentation/hibernate</module>
    <module>instrumentation/http-url-connection</module>
    <module>instrumentation/java-http-server</module>
    <module>instrumentation/java-mail</module>
    <module>instrumentation/java-util-logging</module>
    <module>instrumentation/jaxrs</module>
    <module>instrumentation/jaxws</module>
    <module>instrumentation/jdbc</module>
    <module>instrumentation/jms</module>
    <module>instrumentation/jsf</module>
    <module>instrumentation/jsp</module>
    <module>instrumentation/kafka</module>
    <module>instrumentation/log4j</module>
    <module>instrumentation/logback</module>
    <module>instrumentation/mongodb</module>
    <module>instrumentation/netty</module>
    <module>instrumentation/okhttp</module>
    <module>instrumentation/play</module>
    <module>instrumentation/quartz</module>
    <module>instrumentation/redis</module>
    <module>instrumentation/servlet</module>
    <module>instrumentation/spring</module>
    <module>instrumentation/struts</module>
    <module>instrumentation/wiremock-http-client</module>
    <module>instrumentation-test-matrix</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/glowroot/instrumentation.git</connection>
    <developerConnection>scm:git:git@github.com:glowroot/instrumentation.git</developerConnection>
    <url>https://github.com/glowroot/instrumentation</url>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <logback.version>1.2.3</logback.version>
    <slf4j.version>1.7.25</slf4j.version>
    <immutables.version>2.7.5</immutables.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss Z</maven.build.timestamp.format>
    <!-- the sonar.login system property is set here instead of on the command line so it is
      not visible to ps -->
    <sonar.login>${env.SONAR_LOGIN}</sonar.login>
    <build.commit>[none]</build.commit>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>value</artifactId>
        <version>${immutables.version}</version>
      </dependency>
      <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>builder</artifactId>
        <version>${immutables.version}</version>
      </dependency>
      <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>gson</artifactId>
        <version>${immutables.version}</version>
      </dependency>
      <dependency>
        <!-- the presence of this dependency triggers generation of Java 6 compatible classes -->
        <groupId>org.immutables</groupId>
        <artifactId>android-stub</artifactId>
        <version>${immutables.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.trask</groupId>
        <artifactId>immutables-jdk6-shim</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.5</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>20.0</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <!-- assertj 2.0.0+ requires Java 7+ -->
        <version>1.7.1</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.23.4</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <!-- immutables annotation processors require java 7+ -->
                  <version>[1.7,)</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[3.3.1,)</version>
                </requireMavenVersion>
                <requireUpperBoundDeps />
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- ensure that only methods available in jdk 6 can be used even when compiling with a more
          recent jdk -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.17</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java16</artifactId>
            <version>1.1</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <!-- default when running tests in IDE is local -->
            <test.harness>javaagent</test.harness>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <!-- prevents endPosTable exception for maven compile due to annotation processing,
              see http://immutables.github.io/getstarted.html -->
            <useIncrementalCompilation>false</useIncrementalCompilation>
          </configuration>
          <executions>
            <execution>
              <!-- default is to include all tests that require Java 8+
                tests can still be run against Java 6 and Java 7 by running
                "mvn -Dtest.noDefaultProfiles -Dtest.java6 ..."
                or "mvn -Dtest.noDefaultProfiles -Dtest.java7 ..." -->
              <id>default-testCompile</id>
              <configuration>
                <source>1.8</source>
                <target>1.8</target>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
          <configuration>
            <deployAtEnd>true</deployAtEnd>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M2</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <archive>
              <manifestEntries>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Build-Commit>${build.commit}</Build-Commit>
              </manifestEntries>
              <addMavenDescriptor>false</addMavenDescriptor>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-remote-resources-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.6.0.1398</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.4</version>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>process</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>testCompile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>test-java-6</id>
      <activation>
        <property>
          <name>test.java6</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>default-testCompile</id>
                <configuration>
                  <source>1.6</source>
                  <target>1.6</target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <!-- this is needed when testing some instrumentation against Java 6 or 7 -->
              <argLine>-XX:MaxPermSize=128m</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>test-java-7</id>
      <activation>
        <property>
          <name>test.java7</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>default-testCompile</id>
                <configuration>
                  <source>1.7</source>
                  <target>1.7</target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <!-- this is needed when testing some instrumentation against Java 6 or 7 -->
              <argLine>-XX:MaxPermSize=128m</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>auto-actived-add-license-jar-bundle</id>
      <activation>
        <file>
          <!-- only add license jar bundle to projects that are building a jar file -->
          <exists>${basedir}/src/main/java</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process</goal>
                </goals>
                <configuration>
                  <resourceBundles>
                    <resourceBundle>
                      com.github.trask:apache-license-bundle:1.0.0
                    </resourceBundle>
                  </resourceBundles>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.github.trask</groupId>
                <artifactId>apache-license-bundle</artifactId>
                <version>1.0.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>javadoc</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <!-- exclude deprecated api from javadoc -->
              <nodeprecated>true</nodeprecated>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <configuration>
              <rules>
                <requireReleaseDeps />
                <requireReleaseVersion />
                <requirePluginVersions />
              </rules>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>errorprone</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <compilerId>javac-with-errorprone</compilerId>
              <forceJavacCompilerUse>true</forceJavacCompilerUse>
              <showWarnings>true</showWarnings>
              <compilerArgs>
                <arg>-XepExcludedPaths:.*/target/generated-sources/.*</arg>
                <!-- needed to suppress "bootstrap class path not set in conjunction with -source 1.6" -->
                <arg>-Xlint:-options</arg>
              </compilerArgs>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-compiler-javac-errorprone</artifactId>
                <version>2.8.5</version>
              </dependency>
              <!-- override plexus-compiler-javac-errorprone's dependency on
                   Error Prone with the latest version -->
              <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_core</artifactId>
                <version>2.3.2</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- use "travis-build/travis-build.sh checker" to execute this profile -->
      <id>the-checker-build</id>
      <activation>
        <property>
          <name>build.checker</name>
        </property>
      </activation>
      <properties>
        <checker.version>2.5.6</checker.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
          <version>${checker.version}</version>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker</artifactId>
          <version>${checker.version}</version>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>jdk8</artifactId>
          <version>${checker.version}</version>
          <optional>true</optional>
        </dependency>
        <dependency>
          <!-- not all modules have dependency on immutables (e.g. jdbc-plugin) but need it on
            the classpath for the explicit annotation processing setup below -->
          <groupId>org.immutables</groupId>
          <artifactId>value</artifactId>
          <version>${immutables.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>[1.8,)</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>properties</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
              <maxmem>512m</maxmem>
              <annotationProcessors>
                <annotationProcessor>
                  org.immutables.value.internal.$processor$.$Processor
                </annotationProcessor>
                <annotationProcessor>
                  org.checkerframework.checker.nullness.NullnessChecker
                </annotationProcessor>
                <annotationProcessor>
                  org.checkerframework.checker.tainting.TaintingChecker
                </annotationProcessor>
              </annotationProcessors>
              <compilerArgs>
                <arg>-Xbootclasspath/p:${org.checkerframework:jdk8:jar}</arg>
                <!-- build.checker.stubs needs to be absolute path since relative path will be
                  interpreted from each module directory -->
                <arg>-Astubs=${build.checker.stubs}</arg>
              </compilerArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- this is used by instrumentation-test-matrix to recompile tests classes without recompiling main classes -->
      <id>compile-test-classes-only</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-clean-plugin</artifactId>
              <configuration>
                <excludeDefaultDirectories>true</excludeDefaultDirectories>
                <filesets>
                  <fileset>
                    <directory>${project.build.testOutputDirectory}</directory>
                  </fileset>
                  <fileset>
                    <!-- this is needed to force scala recompilation (used in instrumentation-play) -->
                    <directory>${project.build.directory}</directory>
                    <includes>
                      <include>test-classes.*.timestamp</include>
                    </includes>
                  </fileset>
                </filesets>
              </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <skipMain>true</skipMain>
                <proc>none</proc>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <!-- this is used by instrumentation-test-matrix to to guard against running with wrong (non-existent) profiles -->
      <id>fail-if-no-integration-tests</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <failIfNoTests>true</failIfNoTests>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
